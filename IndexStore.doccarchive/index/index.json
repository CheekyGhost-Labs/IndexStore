{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstore\/init(configuration:logger:)","title":"init(configuration: Configuration, logger: Logger?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstore\/configuration","title":"let configuration: Configuration","type":"property"},{"path":"\/documentation\/indexstore\/indexstore\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/indexstore\/indexstore\/workspace","title":"let workspace: Workspace","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstore\/declarationsource(fordetails:)","title":"func declarationSource(forDetails: SourceSymbol) throws -> String","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/invocationsofsymbol(_:)","title":"func invocationsOfSymbol(SourceSymbol) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/issymbolinvokedbytestcase(_:)","title":"func isSymbolInvokedByTestCase(SourceSymbol) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/pollforchangesandwait()","title":"func pollForChangesAndWait()","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/querysymbols(_:)","title":"func querySymbols(IndexStoreQuery) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/recursiveinheritencecheck(symbol:name:)","title":"func recursiveInheritenceCheck(symbol: SourceSymbol, name: String) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/resolveinheritenceforoccurence(_:)","title":"func resolveInheritenceForOccurence(SymbolOccurrence) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/resolveparentforoccurence(_:)","title":"func resolveParentForOccurence(SymbolOccurrence) -> SourceSymbol?","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcecontents(fordetails:)","title":"func sourceContents(forDetails: SourceSymbol) throws -> String","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbolfromoccurence(_:)","title":"func sourceSymbolFromOccurence(SymbolOccurrence) -> SourceSymbol","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbols(conformingtoprotocol:)","title":"func sourceSymbols(conformingToProtocol: String) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbols(conformingtoprotocol:in:)","title":"func sourceSymbols(conformingToProtocol: String, in: [String]) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbols(foremptyextensionsmatching:)","title":"func sourceSymbols(forEmptyExtensionsMatching: IndexStoreQuery) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbols(subclassing:)","title":"func sourceSymbols(subclassing: String) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/sourcesymbols(subclassing:in:)","title":"func sourceSymbols(subclassing: String, in: [String]) -> [SourceSymbol]","type":"method"},{"path":"\/documentation\/indexstore\/indexstore\/swiftsourcefiles(inprojectdirectory:)","title":"func swiftSourceFiles(inProjectDirectory: String?) -> [String]","type":"method"}],"path":"\/documentation\/indexstore\/indexstore","title":"IndexStore","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailsiterator\/==(_:_:)","title":"static func == (SourceDetailsIterator, SourceDetailsIterator) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailsiterator\/init(_:)","title":"init(SourceDetailsCollection)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailsiterator\/count","title":"var count: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailsiterator\/next()","title":"func next() -> SourceSymbol?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailsiterator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcedetailsiterator\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcedetailsiterator","title":"SourceDetailsIterator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/workspace\/init(configuration:logger:)","title":"init(configuration: Configuration, logger: Logger)","type":"init"},{"path":"\/documentation\/indexstore\/workspace\/init(libindexstorepath:projectdirectory:indexstorepath:indexdatabasepath:listentounitevents:logger:)","title":"init(libIndexStorePath: String, projectDirectory: String, indexStorePath: String, indexDatabasePath: String, listenToUnitEvents: Bool, logger: Logger)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/workspace\/index","title":"var index: IndexStoreDB?","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/indexdatabasepath","title":"let indexDatabasePath: String","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/indexstorepath","title":"let indexStorePath: String","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/libindexstorepath","title":"let libIndexStorePath: String","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/listentounitevents","title":"let listenToUnitEvents: Bool","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/logger","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/indexstore\/workspace\/projectdirectory","title":"let projectDirectory: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/workspace\/loadindexstore()","title":"func loadIndexStore() throws","type":"method"},{"path":"\/documentation\/indexstore\/workspace\/pollforchangesandwait(isinitialscan:)","title":"func pollForChangesAndWait(isInitialScan: Bool)","type":"method"}],"path":"\/documentation\/indexstore\/workspace","title":"Workspace","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/configuration\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/indexstore\/configuration\/init(projectdirectory:indexstorepath:indexdatabasepath:libindexstorepath:)","title":"init(projectDirectory: String, indexStorePath: String?, indexDatabasePath: String?, libIndexStorePath: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/configuration\/indexdatabasepath","title":"let indexDatabasePath: String","type":"property"},{"path":"\/documentation\/indexstore\/configuration\/indexstorepath","title":"let indexStorePath: String","type":"property"},{"path":"\/documentation\/indexstore\/configuration\/isrunningunittests","title":"let isRunningUnitTests: Bool","type":"property"},{"path":"\/documentation\/indexstore\/configuration\/libindexstorepath","title":"let libIndexStorePath: String","type":"property"},{"path":"\/documentation\/indexstore\/configuration\/projectdirectory","title":"let projectDirectory: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/configuration\/fromjson(at:)","title":"static func fromJson(at: String) throws -> Configuration","type":"method"}],"path":"\/documentation\/indexstore\/configuration","title":"Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstorequery\/init()","title":"init()","type":"init"},{"path":"\/documentation\/indexstore\/indexstorequery\/init(query:)","title":"init(query: String)","type":"init"},{"path":"\/documentation\/indexstore\/indexstorequery\/init(sourcefiles:)","title":"init(sourceFiles: [String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstorequery\/anchorend","title":"var anchorEnd: Bool","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/anchorstart","title":"var anchorStart: Bool","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/ignorecase","title":"var ignoreCase: Bool","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/includesubsequence","title":"var includeSubsequence: Bool","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/kinds","title":"var kinds: [SourceKind]","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/query","title":"var query: String?","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/restricttoprojectdirectory","title":"var restrictToProjectDirectory: Bool","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/roles","title":"var roles: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/indexstorequery\/sourcefiles","title":"var sourceFiles: [String]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstorequery\/withanchorend(_:)","title":"func withAnchorEnd(Bool) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withanchorstart(_:)","title":"func withAnchorStart(Bool) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withignoringcase(_:)","title":"func withIgnoringCase(Bool) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withinlcudesubsequences(_:)","title":"func withInlcudeSubsequences(Bool) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withkinds(_:)","title":"func withKinds([SourceKind]) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withquery(_:)","title":"func withQuery(String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withrestrictingtoprojectdirectory(_:)","title":"func withRestrictingToProjectDirectory(Bool) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withroles(_:)","title":"func withRoles(SourceRole) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/withsourcefiles(_:)","title":"func withSourceFiles([String]?) -> IndexStoreQuery","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstorequery\/alldeclarations(in:matching:)","title":"static func allDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/alldeclarations(matching:)","title":"static func allDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/classdeclarations(in:matching:)","title":"static func classDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/classdeclarations(matching:)","title":"static func classDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/enumdeclarations(in:matching:)","title":"static func enumDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/enumdeclarations(matching:)","title":"static func enumDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/extensions(in:matching:)","title":"static func extensions(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/extensions(oftype:)","title":"static func extensions(ofType: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/functions(_:)","title":"static func functions(String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/functions(in:matching:)","title":"static func functions(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/properties(_:)","title":"static func properties(String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/properties(in:matching:)","title":"static func properties(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/protocoldeclarations(in:matching:)","title":"static func protocolDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/protocoldeclarations(matching:)","title":"static func protocolDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/structdeclarations(in:matching:)","title":"static func structDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/structdeclarations(matching:)","title":"static func structDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/typealiasdeclarations(in:matching:)","title":"static func typealiasDeclarations(in: [String], matching: String?) -> IndexStoreQuery","type":"method"},{"path":"\/documentation\/indexstore\/indexstorequery\/typealiasdeclarations(matching:)","title":"static func typealiasDeclarations(matching: String) -> IndexStoreQuery","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/indexstorequery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/indexstorequery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/indexstorequery","title":"IndexStoreQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/init(items:)","title":"init(items: [SourceSymbol])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/items","title":"var items: [SourceSymbol]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/append(_:)","title":"func append(SourceSymbol)","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/makeiterator()","title":"func makeIterator() -> AnyIterator<SourceSymbol>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcedetailscollection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/flatmap(_:)-4da7q","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/flatmap(_:)-5i05e","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/sorted(using:)-2qm3q","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/sorted(using:)-56phd","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/spm_findduplicateelements(by:)","title":"func spm_findDuplicateElements<Key>(by: KeyPath<Self.Element, Key>) -> [[Self.Element]]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/spm_findduplicates()","title":"func spm_findDuplicates() -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/indexstore\/sourcedetailscollection\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/indexstore\/sourcedetailscollection\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcedetailscollection","title":"SourceDetailsCollection","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcelocation\/init(path:modulename:line:column:offset:issystem:isstale:)","title":"init(path: String, moduleName: String, line: Int, column: Int, offset: Int, isSystem: Bool, isStale: Bool)","type":"init"},{"path":"\/documentation\/indexstore\/sourcelocation\/init(symbol:)","title":"init(symbol: SymbolOccurrence)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcelocation\/column","title":"let column: Int","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/isstale","title":"let isStale: Bool","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/issystem","title":"let isSystem: Bool","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/line","title":"let line: Int","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/modulename","title":"let moduleName: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/offset","title":"let offset: Int","type":"property"},{"path":"\/documentation\/indexstore\/sourcelocation\/path","title":"let path: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcelocation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcelocation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcelocation","title":"SourceLocation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/init(rawvalue:)","title":"init(rawValue: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/rawvalue","title":"var rawValue: UInt64","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/accessorof","title":"static let accessorOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/addressof","title":"static let addressOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/all","title":"static let all: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/baseof","title":"static let baseOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/call","title":"static let call: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/calledby","title":"static let calledBy: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/canonical","title":"static let canonical: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/childof","title":"static let childOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/containedby","title":"static let containedBy: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/declaration","title":"static let declaration: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/definition","title":"static let definition: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/dynamic","title":"static let dynamic: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/extendedby","title":"static let extendedBy: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/ibtypeof","title":"static let ibTypeOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/implicit","title":"static let implicit: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/overrideof","title":"static let overrideOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/read","title":"static let read: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/receivedby","title":"static let receivedBy: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/reference","title":"static let reference: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/specializationof","title":"static let specializationOf: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcerole\/write","title":"static let write: SourceRole","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcerole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/indexstore\/sourcerole\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/indexstore\/sourcerole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/indexstore\/sourcerole\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcerole\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/indexstore\/sourcerole\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/indexstore\/sourcerole\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcerole","title":"SourceRole","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcesymbol\/init(name:usr:sourcekind:roles:location:parent:inheritence:)","title":"init(name: String, usr: String, sourceKind: SourceKind, roles: SourceRole, location: SourceLocation, parent: SourceSymbol?, inheritence: [SourceSymbol])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcesymbol\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/id-7hjko","title":"var id: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/inheritance","title":"let inheritance: [SourceSymbol]","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/location","title":"let location: SourceLocation","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/parent","title":"var parent: SourceSymbol?","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/parentsiterator","title":"var parentsIterator: AnyIterator<SourceSymbol>","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/roles","title":"let roles: SourceRole","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/sourcekind","title":"var sourceKind: SourceKind","type":"property"},{"path":"\/documentation\/indexstore\/sourcesymbol\/usr","title":"let usr: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcesymbol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcesymbol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcesymbol\/id-7w9z9","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/indexstore\/sourcesymbol\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcesymbol","title":"SourceSymbol","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/class","title":"case `class`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/classmethod","title":"case classMethod","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/classproperty","title":"case classProperty","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/commenttag","title":"case commentTag","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/concept","title":"case concept","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/constructor","title":"case constructor","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/conversionfunction","title":"case conversionFunction","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/destructor","title":"case destructor","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/enum","title":"case `enum`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/enumconstant","title":"case enumConstant","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/extension","title":"case `extension`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/field","title":"case field","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/function","title":"case function","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/instancemethod","title":"case instanceMethod","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/instanceproperty","title":"case instanceProperty","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/macro","title":"case macro","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/module","title":"case module","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/namespace","title":"case namespace","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/namespacealias","title":"case namespaceAlias","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/parameter","title":"case parameter","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/protocol","title":"case `protocol`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/staticmethod","title":"case staticMethod","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/staticproperty","title":"case staticProperty","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/struct","title":"case `struct`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/typealias","title":"case `typealias`","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/union","title":"case union","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/unsupported","title":"case unsupported","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/using","title":"case using","type":"case"},{"path":"\/documentation\/indexstore\/sourcekind\/variable","title":"case variable","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/indexstore\/sourcekind\/init(symbolkind:)","title":"init(symbolKind: IndexSymbolKind)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/indexsymbolkind","title":"var indexSymbolKind: IndexSymbolKind","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/allfunctions","title":"static var allFunctions: [SourceKind]","type":"property"},{"path":"\/documentation\/indexstore\/sourcekind\/declarations","title":"static var declarations: [SourceKind]","type":"property"},{"path":"\/documentation\/indexstore\/sourcekind\/properties","title":"static var properties: [SourceKind]","type":"property"},{"path":"\/documentation\/indexstore\/sourcekind\/supported","title":"static var supported: [SourceKind]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/excluding(_:)","title":"static func excluding([SourceKind]) -> [SourceKind]","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourcekind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourcekind\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/indexstore\/sourcekind\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourcekind","title":"SourceKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/sourcecontentsisempty(path:)","title":"case sourceContentsIsEmpty(path: String)","type":"case"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/sourcepathdoesnotexist(path:)","title":"case sourcePathDoesNotExist(path: String)","type":"case"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/unabletoreadcontents(path:cause:)","title":"case unableToReadContents(path: String, cause: String)","type":"case"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/unabletoresolvesourceline(name:path:line:)","title":"case unableToResolveSourceLine(name: String, path: String, line: Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/code","title":"var code: Int","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/errordescription-37mq0","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/failurereason-7ymqp","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/recoverysuggestion-6j41h","title":"var recoverySuggestion: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/indexstore\/sourceresolvingerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/indexstore\/sourceresolvingerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/errordescription-5nbc5","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/failurereason-52hvc","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/indexstore\/sourceresolvingerror\/recoverysuggestion-8pupk","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/indexstore\/sourceresolvingerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/indexstore\/sourceresolvingerror","title":"SourceResolvingError","type":"enum"}],"path":"\/documentation\/indexstore","title":"IndexStore","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}